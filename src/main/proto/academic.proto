// ----------------------settings-----------------------------------------

// If we did not define the syntax, it would take the syntax as proto2 by default
syntax = "proto3";

// This is where the autogenerated java classes are gonna be stored
package com.academic.stub.academic;

// With this line, I am saying that create multiple classes rather than a single class
option java_multiple_files = true;


// ----------------------message-----------------------------------------------------


// ----------------------request --------------------------------------------------------
message EmptyRequest {
}

message AddStudentRequest {
  string studentNumber = 1;
  string studentName = 2;
  string major = 3;
}

message AddCourseRequest {
  string courseNumber = 1;
  string professorLastName = 2;
  string courseName = 3;
  repeated string advancedCourseNumber = 4;
}

message DeleteStudentRequest{
  string studentNumber = 1;
}

message DeleteCourseRequest{
  string courseNumber = 1;
}

message ApplicationForCourseRequest{
  string studentNumber = 1;
  string courseNumber = 2;
}

// ----------------------response --------------------------------------------------------

message AllStudentsDataResponse {

  message Student {
    string studentNumber = 1;
    string studentName = 2;
    string major = 3;
    repeated string courseNumber = 4;
  }
  repeated Student students = 2;
}

message AllCoursesDataResponse {

  message Course {
    string courseNumber = 1;
    string professorLastName = 2;
    string courseName = 3;
    repeated string advancedCourseNumber = 4;
  }
  repeated Course courses = 2;
}

message IsCompletedResponse {
  bool isCompleted = 1;
}

// ----------------------service----------------------------------------------------
service StudentService {
  rpc GetAllStudentsData (EmptyRequest) returns (AllStudentsDataResponse) {}
  rpc AddStudentData(AddStudentRequest) returns (IsCompletedResponse) {}
  rpc DeleteStudentData(DeleteStudentRequest) returns (IsCompletedResponse) {}
}

service CourseService {
  rpc GetAllCoursesData (EmptyRequest) returns (AllCoursesDataResponse) {}
  rpc AddCourseData(AddCourseRequest) returns (IsCompletedResponse) {}
  rpc DeleteCourseData(DeleteCourseRequest) returns (IsCompletedResponse) {}
}

service StudentCourseService{
  rpc ApplicationForCourse (ApplicationForCourseRequest) returns (IsCompletedResponse) {}
}